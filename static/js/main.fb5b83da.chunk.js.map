{"version":3,"sources":["service/api.js","Redux/Actions/index.js","images/lupa.png","images/cart.png","Components/ElementsHome.jsx","Components/ProductCard.jsx","Components/ProductsList.jsx","Components/Categories.jsx","Pages/Home.jsx","Pages/ProductDetails.jsx","Pages/Cart.jsx","Pages/Checkout.jsx","images/pandaHeader.png","App.js","service/globalFunctions.js","Redux/Reducers/CartReducer.js","Redux/Reducers/CategoriesListReducer.js","Redux/Reducers/ProductsReducer.js","Redux/Reducers/index.js","Redux/Store/index.js","index.js"],"names":["a","fetch","data","json","result","getProductBySearchBar","categoryId","query","ADD_CART","COMPLETED_BUY","CONTINUOUS_BUY","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_ITEM","CLEAR_PRODUCTS","SUM_PRODUCTS","addCart","product","id","type","payload","backHome","updateSum","sumProducts","REQUEST_CATEGORIES_LIST_SUCCESS","REQUEST_CATEGORIES_LIST_ERROR","fetchCategories","dispatch","getCategories","then","categoriesListSuccess","listCategories","catch","categoriesListError","error","REQUEST_PRODUCTS","REQUEST_PRODUCTS_SUCCESS","REQUEST_PRODUCTS_ERROR","requestProducts","fetchOn","requestProductsSuccess","products","results","requestProductsError","fetchProducts","ProductsSuccess","ProductsError","ElementsHome","handleChange","value","target","setState","state","this","props","cart","getProducts","className","placeholder","onChange","onClick","src","lupa","alt","to","imgCart","length","Component","connect","CartReducer","ProductCard","title","thumbnail","price","toLocaleString","minimumFractionDigits","ProductsList","addToCart","map","pathname","ProductsReducer","Categories","oneWordCategories","name","split","clickCategory","CategoriesListReducer","Home","categories","ProductDetails","location","attributes","attribute","value_name","Cart","totalSumProducts","increaseQty","decreaseQty","removeIteM","clearProductS","backToHome","availableQuantity","count","totalValue","disabled","countScreen","countIncrease","increaseQuantity","decreaseQuantity","removeItem","Checkout","buyCompleted","totalSum","App","pandaHeader","width","exact","path","component","addCartRefact","findProduct","find","item","available_quantity","productCart","localStorage","setItem","JSON","stringify","key","indexOf","Math","round","completedBuy","updatedCart","updatedCount","filter","clearProducts","reduce","acc","updateSuM","INITIAL_STATE","localStorageCart","getItem","LScart","parse","restoreFromLocalStorage","action","rootReducer","combineReducers","composeWithDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb5b83da.chunk.js","sourcesContent":["export async function getCategories() {\n  const data = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const result = await data.json();\n  return result;\n}\n\nexport async function getProductBySearchBar(categoryId, query) {\n  const data = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const result = await data.json();\n  return result;\n}\n","import { getCategories, getProductBySearchBar } from '../../service/api';\n// CART -------------------------------------------------------------------\nexport const ADD_CART = 'ADD_CART';\nexport const COMPLETED_BUY = 'COMPLETED_BUY';\nexport const CONTINUOUS_BUY = 'CONTINUOUS_BUY';\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const CLEAR_PRODUCTS = 'CLEAR_PRODUCTS';\nexport const SUM_PRODUCTS = 'SUM_PRODUCTS';\n\nexport const addCart = (product, id) => ({\n  type: ADD_CART,\n  payload: {\n    product,\n    id,\n  },\n});\n\nexport const finishBuy = () => ({\n  type: COMPLETED_BUY,\n  payload: {\n    cart: [],\n    countScreen: [],\n    totalSum: 0,\n    updateSum: true,\n  },\n});\n\nexport const backHome = () => ({\n  type: CONTINUOUS_BUY,\n  payload: {\n    updateSum: true,\n  },\n});\n\nexport const increaseQuantity = (id) => ({\n  type: INCREASE_QUANTITY,\n  payload: {\n    id,\n  },\n});\n\nexport const decreaseQuantity = (id) => ({\n  type: DECREASE_QUANTITY,\n  payload: {\n    id,\n  },\n});\n\nexport const removeItem = (id) => ({\n  type: REMOVE_ITEM,\n  payload: {\n    id,\n  },\n});\n\nexport const clearProducts = () => ({\n  type: CLEAR_PRODUCTS,\n});\n\nexport const sumProducts = () => ({\n  type: SUM_PRODUCTS,\n});\n// ------------------------------------------------------------------------\n// CATEGORIES LIST -------------------------------------------------------------------\nexport const FETCH_CATEGORIES_LIST = 'FETCH_CATEGORIES_LIST';\nexport const REQUEST_CATEGORIES_LIST_SUCCESS = 'REQUEST_CATEGORIES_LIST_SUCCESS';\nexport const REQUEST_CATEGORIES_LIST_ERROR = 'REQUEST_CATEGORIES_LIST_ERROR';\n\nexport const fetchCategoriesList = () => ({\n  type: FETCH_CATEGORIES_LIST,\n});\n\nexport const requestCategoriesListSuccess = (listCategories) => ({\n  type: REQUEST_CATEGORIES_LIST_SUCCESS,\n  payload: {\n    listCategories,\n  },\n});\n\nexport const requestCategoriesListError = (error) => ({\n  type: REQUEST_CATEGORIES_LIST_ERROR,\n  payload: {\n    error,\n  },\n});\n\n// Fetch Thunk\nexport const fetchCategories = () => (dispatch) => {\n  dispatch(fetchCategoriesList());\n  getCategories()\n    .then((categoriesListSuccess) => dispatch(\n      requestCategoriesListSuccess(categoriesListSuccess),\n    ))\n    .catch((categoriesListError) => dispatch(\n      requestCategoriesListError(categoriesListError),\n    ));\n};\n// -------------------------------------------------------------------------\n// PRODUCTS -------------------------------------------------------------------\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\nexport const REQUEST_PRODUCTS_SUCCESS = 'REQUEST_PRODUCTS_SUCCESS';\nexport const REQUEST_PRODUCTS_ERROR = 'REQUEST_PRODUCTS_ERROR';\n\nexport const requestProducts = () => ({\n  type: REQUEST_PRODUCTS,\n  payload: {\n    fetchOn: true,\n  },\n});\n\nexport const requestProductsSuccess = (products) => ({\n  type: REQUEST_PRODUCTS_SUCCESS,\n  payload: {\n    products: products.results,\n    fetchOn: true,\n  },\n});\n\nexport const requestProductsError = (error) => ({\n  type: REQUEST_PRODUCTS_ERROR,\n  payload: {\n    error,\n  },\n});\n\n// Fetch Thunk\nconst defaultParam = '';\nexport const fetchProducts = (categoryId = defaultParam, query = defaultParam) => (dispatch) => {\n  dispatch(requestProducts());\n  getProductBySearchBar(categoryId, query)\n    .then((ProductsSuccess) => dispatch(\n      requestProductsSuccess(ProductsSuccess),\n    ))\n    .catch((ProductsError) => dispatch(\n      requestProductsError(ProductsError),\n    ));\n};\n// -------------------------------------------------------------------------\n","export default __webpack_public_path__ + \"static/media/lupa.d7a62503.png\";","export default __webpack_public_path__ + \"static/media/cart.80f1b71e.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../Redux/Actions';\n\nimport lupa from '../images/lupa.png';\nimport imgCart from '../images/cart.png';\n\nclass ElementsHome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n    };\n  }\n\n  handleChange = ({ target: { value } }) => {\n    this.setState({\n      query: value,\n    });\n  }\n\n  render() {\n    const { cart, getProducts } = this.props;\n    const { query } = this.state;\n\n    return (\n      <div className=\"elementsHome\">\n        <div className=\"inputButtons\">\n          <input\n            className=\"inputSearch\"\n            placeholder=\"Insira um produto\"\n            type=\"text\"\n            onChange={this.handleChange}\n          />\n          <button\n            className=\"buttonSearch\"\n            type=\"button\"\n            onClick={() => getProducts(null, query)}\n          >\n            <img src={lupa} alt=\"pesquisar\" className=\"imgSearch\" />\n          </button>\n          <div className=\"qtdAndCart\">\n            <button\n              className=\"cartSearch\"\n              type=\"button\"\n            >\n              <Link\n                to=\"/cart\"\n              >\n                <img src={imgCart} alt=\"carrinho de compras\" className=\"imgCart\" />\n              </Link>\n            </button>\n            <p className={(cart.length === 0) ? 'qtdCart' : ''}>{cart.length}</p>\n          </div>\n        </div>\n        <h4>Digite algum termo de pesquisa ou escolha uma categoria.</h4>\n      </div>\n    );\n  }\n}\n\nElementsHome.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getProducts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ CartReducer: { cart } }) => ({\n  cart,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProducts: (categoryId, query) => dispatch(\n    fetchProducts(categoryId, query),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementsHome);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ProductCard extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const { product } = this.props;\n    const { title, thumbnail, price } = product;\n    return (\n      <div className=\"item\">\n        <h4 className=\"title\">{title}</h4>\n        <img src={thumbnail} alt={title} />\n        <h4 className=\"price\">{`R$ ${price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}` }</h4>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addCart } from '../Redux/Actions';\n\nimport ProductCard from './ProductCard';\n\nclass ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const { products, addToCart } = this.props;\n    return (\n      <div className=\"items\">\n        {products.map((product) => (\n          <div key={product.id}>\n            <ProductCard product={product} />\n            <button\n              type=\"button\"\n              className=\"buttonDetails\"\n            >\n              <Link to={{\n                pathname: `/details/${product.id}`,\n                state: { product },\n              }}\n              >\n                Mais Detalhes\n              </Link>\n            </button>\n            <button\n              type=\"button\"\n              className=\"buttonCart\"\n              onClick={() => addToCart(product, product.id)}\n            >\n              Adicionar\n            </button>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nProductsList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ ProductsReducer: { products } }) => ({\n  products,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (product, id) => dispatch(\n    addCart(product, id),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchProducts } from '../Redux/Actions';\n\nclass Categories extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  oneWordCategories = (name) => {\n    const singleName = name.split(' ')[0];\n    const noComma = singleName.split(',')[0];\n    return noComma;\n  }\n\n  render() {\n    const { listCategories, clickCategory } = this.props;\n    return (\n      <div className=\"categoriesBar\">\n        <div className=\"categories\">\n          {listCategories.map(({ name, id }) => (\n            <button\n              key={id}\n              type=\"button\"\n              value={id}\n              onClick={() => clickCategory(id)}\n            >\n              {this.oneWordCategories(name)}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  listCategories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clickCategory: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  CategoriesListReducer: { listCategories },\n}) => ({\n  listCategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clickCategory: (categoryId, query) => dispatch(\n    fetchProducts(categoryId, query),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ElementsHome from '../Components/ElementsHome';\nimport ProductsList from '../Components/ProductsList';\nimport Categories from '../Components/Categories';\nimport { fetchCategories } from '../Redux/Actions';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = { };\n  }\n\n  componentDidMount() {\n    const { categories } = this.props;\n    categories();\n  }\n\n  render() {\n    const { fetchOn } = this.props;\n    if (fetchOn) {\n      return (\n        <div>\n          <ElementsHome />\n          <div className=\"Cards\">\n            <Categories />\n            <ProductsList />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"pandaBG\">\n        <ElementsHome />\n        <Categories />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  fetchOn: PropTypes.bool.isRequired,\n  categories: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  ProductsReducer: { fetchOn },\n}) => ({\n  fetchOn,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  categories: () => dispatch(\n    fetchCategories(),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addCart } from '../Redux/Actions';\n\nimport imgCart from '../images/cart.png';\n\nclass ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // addCart = (product) => {\n  //   const { cart } = this.state;\n  //   const productCart = addCartRefact(product, cart);\n  //   this.setState({\n  //     cart: productCart,\n  //   });\n  //   localStorage.setItem('LScart', JSON.stringify(productCart));\n  // }\n\n  render() {\n    const { location: { state: { product } } } = this.props;\n    const {\n      id, title, thumbnail, price, attributes,\n    } = product;\n    const { addToCart, cart } = this.props;\n    return (\n      <div className=\"ProductDetails\">\n        <div className=\"details\">\n          <h4>DETALHES DO PRODUTO</h4>\n          <br />\n          <p className=\"title\">{title}</p>\n          <img src={thumbnail} alt={title} />\n          <p className=\"price\">{`R$ ${price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}` }</p>\n          <br />\n        </div>\n        <div className=\"moreInformations\">\n          <h4>MAIS INFORMAÇÕES:</h4>\n          <br />\n          {attributes.map((attribute) => (\n            <div key={attribute.name}>\n              <p className=\"uppercase\">{`${attribute.name}: ${attribute.value_name}` }</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"areaButtonsDetails\">\n          <button\n            type=\"button\"\n            className=\"buttonCart\"\n            onClick={() => addToCart(product, id)}\n          >\n            Adicionar\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n          <div className=\"qtdAndCart\">\n            <button\n              className=\"cartSearch\"\n              type=\"button\"\n            >\n              <Link\n                to=\"/cart\"\n              >\n                <img src={imgCart} alt=\"carrinho de compras\" className=\"imgCart\" />\n              </Link>\n            </button>\n            <p className={(cart.length === 0) ? 'qtdCart' : ''}>{cart.length}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        attributes: PropTypes.arrayOf(PropTypes.object).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (product, id) => dispatch(\n    addCart(product, id),\n  ),\n});\n\nconst mapStateToProps = ({ CartReducer: { cart } }) => ({\n  cart,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  increaseQuantity,\n  decreaseQuantity,\n  removeItem,\n  clearProducts,\n  sumProducts,\n  backHome,\n} from '../Redux/Actions';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  componentDidMount() {\n    const { totalSumProducts } = this.props;\n    totalSumProducts();\n  }\n\n  componentDidUpdate() {\n    const { totalSumProducts } = this.props;\n    totalSumProducts();\n  }\n\n  render() {\n    const {\n      cart,\n      // countScreen,\n      increaseQty,\n      decreaseQty,\n      removeIteM,\n      clearProductS,\n      backToHome,\n    } = this.props;\n    const haveCart = cart.length;\n    if (!haveCart) {\n      return (\n        <div className=\"cartEmpty\">\n          <div>\n            <h3>Carrinho de Compras</h3>\n            <h5>Seu carrinho está vazio.</h5>\n          </div>\n          <div className=\"areaButtons\">\n            <button\n              type=\"button\"\n              className=\"buttonHome\"\n              onClick={backToHome}\n            >\n              <Link to=\"/\">\n                Home\n              </Link>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"cartFull\">\n        <div className=\"itemsCart\">\n          {cart.map(({\n            id, title, price, thumbnail, availableQuantity, count, totalValue,\n          }) => (\n            <div key={id}>\n              <div className=\"itemCart\">\n                <h4 className=\"title\">{title}</h4>\n                <img src={thumbnail} alt={title} />\n                <h4>\n                  {/* {`Qtide: ${countScreen.find((counT) => counT.id === id).count\n                    .toLocaleString('pt-br', { minimumFractionDigits: 1 })}`} */}\n                  {`Qtide: ${count\n                    .toLocaleString('pt-br', { minimumFractionDigits: 1 })}`}\n                </h4>\n                <h4 className=\"price\">\n                  {`Preço: R$ ${price\n                    .toLocaleString('pt-br', { minimumFractionDigits: 2 })}`}\n                </h4>\n                <h3 className=\"totalValue\">\n                  Total R$:\n                  {\n                    totalValue\n                      .toLocaleString('pt-br', { minimumFractionDigits: 2 })\n                  }\n                </h3>\n\n                <div className=\"itemButtons\">\n                  <button\n                    className=\"increase\"\n                    type=\"button\"\n                    disabled={count >= availableQuantity}\n                    onClick={() => increaseQty(id, count)}\n                  >\n                    +\n                  </button>\n                  <button\n                    className=\"decrease\"\n                    type=\"button\"\n                    onClick={() => decreaseQty(id)}\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"remove\"\n                    type=\"button\"\n                    onClick={() => removeIteM(id)}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"areaButtons\">\n          <button\n            type=\"button\"\n            className=\"buttonCheckout\"\n          >\n            <Link\n              to=\"/checkout\"\n            >\n              Finalizar Compra\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonClear\"\n            onClick={clearProductS}\n          >\n            Limpar Produtos\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n            onClick={backToHome}\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCart.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  // countScreen: PropTypes.arrayOf(PropTypes.object).isRequired,\n  increaseQty: PropTypes.func.isRequired,\n  decreaseQty: PropTypes.func.isRequired,\n  removeIteM: PropTypes.func.isRequired,\n  clearProductS: PropTypes.func.isRequired,\n  totalSumProducts: PropTypes.func.isRequired,\n  backToHome: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ CartReducer: { cart, countScreen } }) => ({\n  cart,\n  countScreen,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  increaseQty: (id, countIncrease) => dispatch(\n    increaseQuantity(id, countIncrease),\n  ),\n  decreaseQty: (id) => dispatch(\n    decreaseQuantity(id),\n  ),\n  removeIteM: (id) => dispatch(\n    removeItem(id),\n  ),\n  clearProductS: () => dispatch(\n    clearProducts(),\n  ),\n  totalSumProducts: () => dispatch(\n    sumProducts(),\n  ),\n  backToHome: () => dispatch(\n    backHome(),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { backHome, finishBuy, sumProducts } from '../Redux/Actions';\n\nclass Checkout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  componentDidMount() {\n    const { totalSumProducts } = this.props;\n    totalSumProducts();\n  }\n\n  componentDidUpdate() {\n    const { totalSumProducts } = this.props;\n    totalSumProducts();\n  }\n\n  render() {\n    const {\n      buyCompleted,\n      backToHome,\n      cart,\n      totalSum,\n    } = this.props;\n\n    const haveCart = cart.length;\n\n    if (!haveCart) {\n      return (\n        <div className=\"cartEmpty\">\n          <div>\n            <h2>Resumo da Compra</h2>\n            <h5>Seu carrinho está vazio.</h5>\n          </div>\n          <div className=\"areaButtons\">\n            <button\n              type=\"button\"\n              className=\"buttonHome\"\n            >\n              <Link to=\"/\">\n                Home\n              </Link>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"checkoutFull\">\n        <div className=\"itemsCart\">\n          {cart.map(\n            (\n              {\n                id, thumbnail, title, totalValue, count,\n              },\n            ) => (\n              <div key={id}>\n                <div className=\"itemCheckout\">\n                  <img src={thumbnail} alt={title} />\n                  <h4 className=\"title\">{title}</h4>\n                  <h4>{ `Qtide: ${count}` }</h4>\n                  <h3 className=\"price\">\n                    { `Valor R$:\n                    ${totalValue.toLocaleString('pt-br', { minimumFractionDigits: 2 })}`}\n                  </h3>\n                </div>\n              </div>\n            ),\n          ) }\n        </div>\n        <h4 className=\"totalValue\">\n          {\n            `VALOR TOTAL DO PRODUTOS:\n            R$ ${totalSum.toLocaleString('pt-br', { minimumFractionDigits: 2 })}`\n          }\n        </h4>\n        <br />\n        <div className=\"areaButtons\">\n          <button\n            type=\"button\"\n            className=\"buttonCheckout\"\n          >\n            <Link\n              to=\"/\"\n              onClick={buyCompleted}\n            >\n              Comprar\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonCancel\"\n          >\n            <Link\n              to=\"/\"\n              onClick={buyCompleted}\n            >\n              Cancelar Compra\n            </Link>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonHome\"\n            onClick={backToHome}\n          >\n            <Link to=\"/\">\n              Home\n            </Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  buyCompleted: PropTypes.func.isRequired,\n  totalSumProducts: PropTypes.func.isRequired,\n  backToHome: PropTypes.func.isRequired,\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  totalSum: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = ({ CartReducer: { cart, totalSum } }) => ({\n  cart,\n  totalSum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  buyCompleted: () => dispatch(\n    finishBuy(),\n  ),\n  totalSumProducts: () => dispatch(\n    sumProducts(),\n  ),\n  backToHome: () => dispatch(\n    backHome(),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n","export default __webpack_public_path__ + \"static/media/pandaHeader.0d3a3eaf.png\";","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home';\nimport ProductDetails from './Pages/ProductDetails';\nimport Cart from './Pages/Cart';\nimport Checkout from './Pages/Checkout';\n\nimport pandaHeader from './images/pandaHeader.png';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={pandaHeader} alt=\"urso panda\" width=\"65px\" />\n        <h1>PANDA STORE</h1>\n      </header>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/details/:id\" component={ProductDetails} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route path=\"/checkout\" component={Checkout} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// ---------------------------------------------------------------------------------------------\n// Funções para Adicionar produtos ao carrinho de compras, existe duas versões:\n// 1 - Versão addCartFull : maior e mais didática\n// 2 - Versão addCartRefact : mais enxuta e organizada\n\nexport function addCartFull(product, cart) {\n  const {\n    id, title, thumbnail, price,\n  } = product;\n  if (!cart.length) {\n    const availableQuantity = product.available_quantity;\n    const productCart = [{\n      id, title, thumbnail, price, count: 1, totalValue: price, availableQuantity,\n    }];\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n    return productCart;\n  }\n  let productCart = [...cart];\n  const findProduct = productCart.find((item) => item.id === product.id);\n  if (findProduct) {\n    const key = productCart.indexOf(findProduct);\n    productCart[key].count += 1;\n    productCart[key].totalValue = Math.round((productCart[key].count\n      * productCart[key].price) * 100) / 100;\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n    return productCart;\n  }\n  const availableQuantity = product.available_quantity;\n  productCart = [...productCart, {\n    id, title, thumbnail, price, count: 1, totalValue: price, availableQuantity,\n  }];\n  localStorage.setItem('LScart', JSON.stringify(productCart));\n  return productCart;\n}\n\nexport function addCartRefact(product, cart) {\n  const {\n    id, title, thumbnail, price,\n  } = product;\n  const findProduct = cart.find((item) => item.id === product.id);\n  if (!cart.length || !findProduct) {\n    const availableQuantity = product.available_quantity;\n    const productCart = [...cart, {\n      id, title, thumbnail, price, availableQuantity, count: 1, totalValue: price,\n    }];\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n    return productCart;\n  }\n  const productCart = [...cart];\n  const key = productCart.indexOf(findProduct);\n  productCart[key].count += 1;\n  productCart[key].totalValue = Math.round((productCart[key].count\n    * productCart[key].price) * 100) / 100;\n  localStorage.setItem('LScart', JSON.stringify(productCart));\n  return productCart;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport const restoreFromLocalStorage = () => {\n  const localStorageCart = localStorage.getItem('LScart');\n  if (localStorageCart) {\n    const LScart = JSON.parse(localStorageCart);\n    return {\n      LScart,\n    };\n  }\n  return {\n    LScart: [],\n  };\n};\n\n// ---------------------------------------------------------------------------------------------\n// Checkout Page\n\nexport const completedBuy = (cart, countScreen) => {\n  localStorage.setItem('LScart', JSON.stringify(cart));\n  localStorage.setItem('LScount', JSON.stringify(countScreen));\n  return {\n    updatedCart: cart,\n    updatedCount: countScreen,\n  };\n};\n\n// ---------------------------------------------------------------------------------------------\n// Cart Page\n\nexport const increaseQuantity = (id, cart) => {\n  const productCart = [...cart];\n  const findProduct = productCart.find((item) => item.id === id);\n  const key = productCart.indexOf(findProduct);\n  productCart[key].count += 1;\n  productCart[key].totalValue = Math.round((productCart[key].count\n    * productCart[key].price) * 100) / 100;\n  localStorage.setItem('LScart', JSON.stringify(productCart));\n  return {\n    updatedCart: productCart,\n    updateSum: true,\n  };\n};\n\nexport const decreaseQuantity = (id, cart) => {\n  const productCart = [...cart];\n  const findProduct = productCart.find((item) => item.id === id);\n  const key = productCart.indexOf(findProduct);\n  if (productCart[key].count > 1) {\n    productCart[key].count -= 1;\n    productCart[key].totalValue = Math.round((productCart[key].count\n      * productCart[key].price) * 100) / 100;\n    localStorage.setItem('LScart', JSON.stringify(productCart));\n    return {\n      updatedCart: productCart,\n      updateSum: true,\n    };\n  }\n  return '';\n};\n\nexport const removeItem = (id, cart) => {\n  const productCart = [...cart];\n  const updatedCart = productCart.filter((item) => item.id !== id);\n  localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  return {\n    updatedCart,\n    updateSum: true,\n  };\n};\n\nexport const clearProducts = () => {\n  const updatedCart = [];\n  const updatedCount = [];\n  localStorage.setItem('LScart', JSON.stringify(updatedCart));\n  localStorage.setItem('LScount', JSON.stringify(updatedCount));\n  return {\n    updatedCart,\n    updatedCount,\n    updateSum: true,\n  };\n};\n\nexport const totalSumProducts = (cart) => {\n  const valueSum = cart.reduce((acc, value) => acc + value.totalValue, 0);\n  return {\n    totalSum: valueSum,\n    updateSuM: false,\n  };\n};\n\n// Lógica abaixo não está sendo usada, foi usada anteriormente para solucionar\n// um bug. -> Nesse momento ela é uma lembrança de uma batalha vencida ;)\nexport const countProduct = (id, productCart, countScreeN) => {\n  const minValueCount = 1;\n  if (productCart) {\n    const valueCount = productCart.find((item) => item.id === id).count;\n    const countScreen = [{ id, count: valueCount }, ...countScreeN];\n    localStorage.setItem('LScount', JSON.stringify(countScreen));\n    return countScreen;\n  }\n  const countScreen = [{ id, count: minValueCount }, ...countScreeN];\n  localStorage.setItem('LScount', JSON.stringify(countScreen));\n  return countScreen;\n};\n// ---------------------------------------------------------------------------------------------\n\n// ---------------------------------------------------------------------------------------------\n","import {\n  ADD_CART,\n  COMPLETED_BUY,\n  CONTINUOUS_BUY,\n  INCREASE_QUANTITY,\n  DECREASE_QUANTITY,\n  REMOVE_ITEM,\n  CLEAR_PRODUCTS,\n  SUM_PRODUCTS,\n} from '../Actions';\n\nimport {\n  restoreFromLocalStorage,\n  addCartRefact,\n  completedBuy,\n  increaseQuantity,\n  decreaseQuantity,\n  removeItem,\n  clearProducts,\n  totalSumProducts,\n} from '../../service/globalFunctions';\n\n// -------------------------------------------------------------------------------------------------\nconst initialState = restoreFromLocalStorage();\nconst { LScart } = initialState;\nconst INITIAL_STATE = {\n  cart: LScart,\n  totalSum: 0,\n  updateSum: true,\n};\n\n// -------------------------------------------------------------------------------------------------\n\nconst CartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_CART: {\n      const { payload: { product } } = action;\n      const { cart } = state;\n      const productCart = addCartRefact(product, cart);\n      return {\n        ...state,\n        cart: productCart,\n      };\n    }\n\n    case INCREASE_QUANTITY: {\n      const { payload: { id } } = action;\n      const { cart } = state;\n      const productCart = increaseQuantity(id, cart);\n      const { updatedCart, updateSum } = productCart;\n      return {\n        ...state,\n        cart: updatedCart,\n        updateSum,\n      };\n    }\n\n    case DECREASE_QUANTITY: {\n      const { payload: { id } } = action;\n      const { cart } = state;\n      const productCart = decreaseQuantity(id, cart);\n      const { updatedCart, updateSum } = productCart;\n      if (updatedCart) {\n        return {\n          ...state,\n          cart: updatedCart,\n          updateSum,\n        };\n      }\n      return state;\n    }\n\n    case REMOVE_ITEM: {\n      const { payload: { id } } = action;\n      const { cart } = state;\n      const productCart = removeItem(id, cart);\n      const { updatedCart, updateSum } = productCart;\n      return {\n        ...state,\n        cart: updatedCart,\n        updateSum,\n      };\n    }\n\n    case CLEAR_PRODUCTS: {\n      const productCart = clearProducts();\n      const { updatedCart, updatedCount, updateSum } = productCart;\n      return {\n        ...state,\n        cart: updatedCart,\n        countScreen: updatedCount,\n        updateSum,\n      };\n    }\n\n    case SUM_PRODUCTS: {\n      const { updateSum, cart } = state;\n      const productCart = totalSumProducts(cart);\n      const { totalSum, updateSuM } = productCart;\n      if (updateSum) {\n        return {\n          ...state,\n          totalSum,\n          updateSum: updateSuM,\n        };\n      }\n      return state;\n    }\n\n    case CONTINUOUS_BUY: {\n      const { payload: { updateSum } } = action;\n      return {\n        ...state,\n        updateSum,\n      };\n    }\n\n    case COMPLETED_BUY: {\n      const {\n        payload: {\n          cart,\n          countScreen,\n          totalSum,\n          updateSum,\n        },\n      } = action;\n      const productCart = completedBuy(cart, countScreen);\n      const { updatedCart, updatedCount } = productCart;\n      return {\n        ...state,\n        cart: updatedCart,\n        countScreen: updatedCount,\n        totalSum,\n        updateSum,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;\n","import {\n  REQUEST_CATEGORIES_LIST_SUCCESS,\n  REQUEST_CATEGORIES_LIST_ERROR,\n} from '../Actions';\n\n// -------------------------------------------------------------------------------------------------\nconst INITIAL_STATE = {\n  listCategories: [],\n};\n\n// -------------------------------------------------------------------------------------------------\n\nconst CategoriesListReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_CATEGORIES_LIST_SUCCESS: {\n      const { payload: { listCategories } } = action;\n      return {\n        ...state,\n        listCategories,\n      };\n    }\n\n    case REQUEST_CATEGORIES_LIST_ERROR: {\n      const { payload: { error } } = action;\n      return {\n        ...state,\n        error,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default CategoriesListReducer;\n","import {\n  REQUEST_PRODUCTS,\n  REQUEST_PRODUCTS_SUCCESS,\n  REQUEST_PRODUCTS_ERROR,\n} from '../Actions';\n\n// -------------------------------------------------------------------------------------------------\nconst INITIAL_STATE = {\n  products: [],\n  fetchOn: false,\n};\n\n// -------------------------------------------------------------------------------------------------\n\nconst ProductsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_PRODUCTS: {\n      const { payload: { fetchOn } } = action;\n      return {\n        ...state,\n        fetchOn,\n      };\n    }\n\n    case REQUEST_PRODUCTS_SUCCESS: {\n      const { payload: { products, fetchOn } } = action;\n      return {\n        ...state,\n        products,\n        fetchOn,\n      };\n    }\n\n    case REQUEST_PRODUCTS_ERROR: {\n      const { payload: { error } } = action;\n      return {\n        ...state,\n        error,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default ProductsReducer;\n","import { combineReducers } from 'redux';\nimport CartReducer from './CartReducer';\nimport CategoriesListReducer from './CategoriesListReducer';\nimport ProductsReducer from './ProductsReducer';\n\nconst rootReducer = combineReducers({\n  CartReducer,\n  CategoriesListReducer,\n  ProductsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../Reducers';\n\nconst composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : (...args) => {\n      if (args.length === 0) return undefined;\n      if (typeof args[0] === 'object') return compose;\n      return compose(...args);\n    }\n);\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './Redux/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}